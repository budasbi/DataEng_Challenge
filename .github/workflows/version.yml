name: Create Release

on:
  push:
    branches:
      - main

permissions:
  contents: write  # Asegura que el token tenga permisos de escritura

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Get current version
        id: get_version
        run: |
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Current version: $VERSION"
          echo "::set-output name=version::$VERSION"

      - name: Bump version and create tag
        id: bump_version
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          IFS='.' read -r -a VERSION_PARTS <<< "${VERSION/v/}"
          NEW_VERSION="v${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$((VERSION_PARTS[2])+1)"

          while git rev-parse "$NEW_VERSION" >/dev/null 2>&1; do
            NEW_VERSION="v${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$((VERSION_PARTS[2])+1)"
            VERSION_PARTS[2]=$((VERSION_PARTS[2]+1))
          done

          echo "New version:" 
          echo $NEW_VERSION
          git tag "$NEW_VERSION"
          echo "::set-output name=new_version::$NEW_VERSION"
      
      - name: Push new tag
        run: |
          git push origin ${{ steps.bump_version.outputs.new_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create GitHub release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.new_version }}
          release_name: Release ${{ steps.bump_version.outputs.new_version }}
          body: |
            Changes in this release:
            - Describe your changes here
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
